<?php

/**
 * @file
 * Module file for the external_db_login module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\external_db_login\ExternalDBLoginService;
use Drupal\external_db_login\Controller\ExternalDBLoginController;
use Drupal\Core\Database\Database;

/**
 * Implements hook_help().
 */
function external_db_login_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Module help for the external_db_login module.
    case 'help.page.external_db_login':
      $output = check_markup(file_get_contents(drupal_get_path('module', 'external_db_login') . '/README.txt'));
      return $output;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function external_db_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login_form') {
    $connection_service = \Drupal::service('external_db_login.service')->testConnection();
    if ($connection_service === 'external_db_login_connection') {
      array_unshift($form['#validate'], 'external_db_login_validate');
      $form['name']['#title'] = t(" Email id / Username");
      $form['name']['#description'] = t("Enter your email id / username.");
    }
  }
  if ($form_id == 'user_form') {
    // Create object of service.
    $service_obj = new ExternalDBLoginService();
    $check_external_user = $service_obj->checkExternalUser(\Drupal::currentUser()->id());
    //if user is external and the current user is not id 1
    if ($check_external_user && \Drupal::currentUser()->id() <> 1) {
      $form['account']['pass']['#access'] = false;
      $form['account']['current_pass']['#access'] = false;
      $form['account']['mail']['#attributes']['readonly'] = 'readonly';
    }
  }
}

/**
 * Validate login form.
 */
function external_db_login_validate($form, FormStateInterface &$form_state) {
  $user_not_found = TRUE;
  $login_input_name = $form_state->getValue('name');
  $login_input_pass = $form_state->getValue('pass');

  // Create object of service.
  $service_obj = new ExternalDBLoginService();
  // Call controller.
  $controller_obj = new ExternalDBLoginController($service_obj);
  // Check user in external database, if found create new account.
  $username = $controller_obj->checkUser($login_input_name, $login_input_pass);
  if (!empty($username)) {
    // Set username in form to login.
    $form_state->setValue('name', $username);
    $user_not_found = FALSE;
  }
  if ($user_not_found) {
    $form_state->setErrorByName('name', t('Sorry, unrecognized username or password. <a href="@password">Have you forgotten your password?</a>', array('@password' => Url::fromRoute('user.pass'))));
    \Drupal::logger('user')->notice('Login attempt failed for %user.', array('%user' => $login_input_name));
  }
}
